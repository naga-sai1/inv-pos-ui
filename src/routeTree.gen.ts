/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as billingBillingsImport } from './routes/(billing)/billings'
import { Route as authSignIn1Import } from './routes/(auth)/sign-in-1'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authChooseImport } from './routes/(auth)/choose'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedBillingIndexImport } from './routes/_authenticated/billing/index'
import { Route as AuthenticatedInventoryManagementSuppliersIndexImport } from './routes/_authenticated/inventory-management/suppliers/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedTasksIndexLazyImport = createFileRoute(
  '/_authenticated/tasks/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedChatsIndexLazyImport = createFileRoute(
  '/_authenticated/chats/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedStockManagementManageStockIndexLazyImport = createFileRoute(
  '/_authenticated/stock-management/manage-stock/',
)()
const AuthenticatedSalesManagementSalesListIndexLazyImport = createFileRoute(
  '/_authenticated/sales-management/sales-list/',
)()
const AuthenticatedReportsSalesReportsIndexLazyImport = createFileRoute(
  '/_authenticated/reports/sales-reports/',
)()
const AuthenticatedPromotionManagementCouponsIndexLazyImport = createFileRoute(
  '/_authenticated/promotion-management/coupons/',
)()
const AuthenticatedInventoryManagementUnitsIndexLazyImport = createFileRoute(
  '/_authenticated/inventory-management/units/',
)()
const AuthenticatedInventoryManagementSubCategoryListIndexLazyImport =
  createFileRoute('/_authenticated/inventory-management/sub-category-list/')()
const AuthenticatedInventoryManagementProductsaddingIndexLazyImport =
  createFileRoute('/_authenticated/inventory-management/productsadding/')()
const AuthenticatedInventoryManagementProductsIndexLazyImport = createFileRoute(
  '/_authenticated/inventory-management/products/',
)()
const AuthenticatedInventoryManagementExpiredProductsIndexLazyImport =
  createFileRoute('/_authenticated/inventory-management/expired-products/')()
const AuthenticatedInventoryManagementCategoryListIndexLazyImport =
  createFileRoute('/_authenticated/inventory-management/category-list/')()
const AuthenticatedInventoryManagementBrandListIndexLazyImport =
  createFileRoute('/_authenticated/inventory-management/brand-list/')()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const billingBillingsRoute = billingBillingsImport.update({
  id: '/(billing)/billings',
  path: '/billings',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn1Route = authSignIn1Import.update({
  id: '/(auth)/sign-in-1',
  path: '/sign-in-1',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authChooseRoute = authChooseImport.update({
  id: '/(auth)/choose',
  path: '/choose',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTasksIndexLazyRoute =
  AuthenticatedTasksIndexLazyImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tasks/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedChatsIndexLazyRoute =
  AuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedBillingIndexRoute = AuthenticatedBillingIndexImport.update({
  id: '/billing/',
  path: '/billing/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedStockManagementManageStockIndexLazyRoute =
  AuthenticatedStockManagementManageStockIndexLazyImport.update({
    id: '/stock-management/manage-stock/',
    path: '/stock-management/manage-stock/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/stock-management/manage-stock/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedSalesManagementSalesListIndexLazyRoute =
  AuthenticatedSalesManagementSalesListIndexLazyImport.update({
    id: '/sales-management/sales-list/',
    path: '/sales-management/sales-list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/sales-management/sales-list/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedReportsSalesReportsIndexLazyRoute =
  AuthenticatedReportsSalesReportsIndexLazyImport.update({
    id: '/reports/sales-reports/',
    path: '/reports/sales-reports/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/reports/sales-reports/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedPromotionManagementCouponsIndexLazyRoute =
  AuthenticatedPromotionManagementCouponsIndexLazyImport.update({
    id: '/promotion-management/coupons/',
    path: '/promotion-management/coupons/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/promotion-management/coupons/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementUnitsIndexLazyRoute =
  AuthenticatedInventoryManagementUnitsIndexLazyImport.update({
    id: '/inventory-management/units/',
    path: '/inventory-management/units/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/units/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute =
  AuthenticatedInventoryManagementSubCategoryListIndexLazyImport.update({
    id: '/inventory-management/sub-category-list/',
    path: '/inventory-management/sub-category-list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/sub-category-list/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementProductsaddingIndexLazyRoute =
  AuthenticatedInventoryManagementProductsaddingIndexLazyImport.update({
    id: '/inventory-management/productsadding/',
    path: '/inventory-management/productsadding/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/productsadding/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementProductsIndexLazyRoute =
  AuthenticatedInventoryManagementProductsIndexLazyImport.update({
    id: '/inventory-management/products/',
    path: '/inventory-management/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/products/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute =
  AuthenticatedInventoryManagementExpiredProductsIndexLazyImport.update({
    id: '/inventory-management/expired-products/',
    path: '/inventory-management/expired-products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/expired-products/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementCategoryListIndexLazyRoute =
  AuthenticatedInventoryManagementCategoryListIndexLazyImport.update({
    id: '/inventory-management/category-list/',
    path: '/inventory-management/category-list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/category-list/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementBrandListIndexLazyRoute =
  AuthenticatedInventoryManagementBrandListIndexLazyImport.update({
    id: '/inventory-management/brand-list/',
    path: '/inventory-management/brand-list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/inventory-management/brand-list/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedInventoryManagementSuppliersIndexRoute =
  AuthenticatedInventoryManagementSuppliersIndexImport.update({
    id: '/inventory-management/suppliers/',
    path: '/inventory-management/suppliers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/choose': {
      id: '/(auth)/choose'
      path: '/choose'
      fullPath: '/choose'
      preLoaderRoute: typeof authChooseImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-1': {
      id: '/(auth)/sign-in-1'
      path: '/sign-in-1'
      fullPath: '/sign-in-1'
      preLoaderRoute: typeof authSignIn1Import
      parentRoute: typeof rootRoute
    }
    '/(billing)/billings': {
      id: '/(billing)/billings'
      path: '/billings'
      fullPath: '/billings'
      preLoaderRoute: typeof billingBillingsImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/billing/': {
      id: '/_authenticated/billing/'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthenticatedBillingIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/suppliers/': {
      id: '/_authenticated/inventory-management/suppliers/'
      path: '/inventory-management/suppliers'
      fullPath: '/inventory-management/suppliers'
      preLoaderRoute: typeof AuthenticatedInventoryManagementSuppliersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/brand-list/': {
      id: '/_authenticated/inventory-management/brand-list/'
      path: '/inventory-management/brand-list'
      fullPath: '/inventory-management/brand-list'
      preLoaderRoute: typeof AuthenticatedInventoryManagementBrandListIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/category-list/': {
      id: '/_authenticated/inventory-management/category-list/'
      path: '/inventory-management/category-list'
      fullPath: '/inventory-management/category-list'
      preLoaderRoute: typeof AuthenticatedInventoryManagementCategoryListIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/expired-products/': {
      id: '/_authenticated/inventory-management/expired-products/'
      path: '/inventory-management/expired-products'
      fullPath: '/inventory-management/expired-products'
      preLoaderRoute: typeof AuthenticatedInventoryManagementExpiredProductsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/products/': {
      id: '/_authenticated/inventory-management/products/'
      path: '/inventory-management/products'
      fullPath: '/inventory-management/products'
      preLoaderRoute: typeof AuthenticatedInventoryManagementProductsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/productsadding/': {
      id: '/_authenticated/inventory-management/productsadding/'
      path: '/inventory-management/productsadding'
      fullPath: '/inventory-management/productsadding'
      preLoaderRoute: typeof AuthenticatedInventoryManagementProductsaddingIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/sub-category-list/': {
      id: '/_authenticated/inventory-management/sub-category-list/'
      path: '/inventory-management/sub-category-list'
      fullPath: '/inventory-management/sub-category-list'
      preLoaderRoute: typeof AuthenticatedInventoryManagementSubCategoryListIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory-management/units/': {
      id: '/_authenticated/inventory-management/units/'
      path: '/inventory-management/units'
      fullPath: '/inventory-management/units'
      preLoaderRoute: typeof AuthenticatedInventoryManagementUnitsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/promotion-management/coupons/': {
      id: '/_authenticated/promotion-management/coupons/'
      path: '/promotion-management/coupons'
      fullPath: '/promotion-management/coupons'
      preLoaderRoute: typeof AuthenticatedPromotionManagementCouponsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/sales-reports/': {
      id: '/_authenticated/reports/sales-reports/'
      path: '/reports/sales-reports'
      fullPath: '/reports/sales-reports'
      preLoaderRoute: typeof AuthenticatedReportsSalesReportsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sales-management/sales-list/': {
      id: '/_authenticated/sales-management/sales-list/'
      path: '/sales-management/sales-list'
      fullPath: '/sales-management/sales-list'
      preLoaderRoute: typeof AuthenticatedSalesManagementSalesListIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/stock-management/manage-stock/': {
      id: '/_authenticated/stock-management/manage-stock/'
      path: '/stock-management/manage-stock'
      fullPath: '/stock-management/manage-stock'
      preLoaderRoute: typeof AuthenticatedStockManagementManageStockIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedBillingIndexRoute: typeof AuthenticatedBillingIndexRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedTasksIndexLazyRoute: typeof AuthenticatedTasksIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
  AuthenticatedInventoryManagementSuppliersIndexRoute: typeof AuthenticatedInventoryManagementSuppliersIndexRoute
  AuthenticatedInventoryManagementBrandListIndexLazyRoute: typeof AuthenticatedInventoryManagementBrandListIndexLazyRoute
  AuthenticatedInventoryManagementCategoryListIndexLazyRoute: typeof AuthenticatedInventoryManagementCategoryListIndexLazyRoute
  AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute: typeof AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute
  AuthenticatedInventoryManagementProductsIndexLazyRoute: typeof AuthenticatedInventoryManagementProductsIndexLazyRoute
  AuthenticatedInventoryManagementProductsaddingIndexLazyRoute: typeof AuthenticatedInventoryManagementProductsaddingIndexLazyRoute
  AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute: typeof AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute
  AuthenticatedInventoryManagementUnitsIndexLazyRoute: typeof AuthenticatedInventoryManagementUnitsIndexLazyRoute
  AuthenticatedPromotionManagementCouponsIndexLazyRoute: typeof AuthenticatedPromotionManagementCouponsIndexLazyRoute
  AuthenticatedReportsSalesReportsIndexLazyRoute: typeof AuthenticatedReportsSalesReportsIndexLazyRoute
  AuthenticatedSalesManagementSalesListIndexLazyRoute: typeof AuthenticatedSalesManagementSalesListIndexLazyRoute
  AuthenticatedStockManagementManageStockIndexLazyRoute: typeof AuthenticatedStockManagementManageStockIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedBillingIndexRoute: AuthenticatedBillingIndexRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedTasksIndexLazyRoute: AuthenticatedTasksIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
  AuthenticatedInventoryManagementSuppliersIndexRoute:
    AuthenticatedInventoryManagementSuppliersIndexRoute,
  AuthenticatedInventoryManagementBrandListIndexLazyRoute:
    AuthenticatedInventoryManagementBrandListIndexLazyRoute,
  AuthenticatedInventoryManagementCategoryListIndexLazyRoute:
    AuthenticatedInventoryManagementCategoryListIndexLazyRoute,
  AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute:
    AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute,
  AuthenticatedInventoryManagementProductsIndexLazyRoute:
    AuthenticatedInventoryManagementProductsIndexLazyRoute,
  AuthenticatedInventoryManagementProductsaddingIndexLazyRoute:
    AuthenticatedInventoryManagementProductsaddingIndexLazyRoute,
  AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute:
    AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute,
  AuthenticatedInventoryManagementUnitsIndexLazyRoute:
    AuthenticatedInventoryManagementUnitsIndexLazyRoute,
  AuthenticatedPromotionManagementCouponsIndexLazyRoute:
    AuthenticatedPromotionManagementCouponsIndexLazyRoute,
  AuthenticatedReportsSalesReportsIndexLazyRoute:
    AuthenticatedReportsSalesReportsIndexLazyRoute,
  AuthenticatedSalesManagementSalesListIndexLazyRoute:
    AuthenticatedSalesManagementSalesListIndexLazyRoute,
  AuthenticatedStockManagementManageStockIndexLazyRoute:
    AuthenticatedStockManagementManageStockIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/choose': typeof authChooseRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-1': typeof authSignIn1Route
  '/billings': typeof billingBillingsRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/billing': typeof AuthenticatedBillingIndexRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/inventory-management/suppliers': typeof AuthenticatedInventoryManagementSuppliersIndexRoute
  '/inventory-management/brand-list': typeof AuthenticatedInventoryManagementBrandListIndexLazyRoute
  '/inventory-management/category-list': typeof AuthenticatedInventoryManagementCategoryListIndexLazyRoute
  '/inventory-management/expired-products': typeof AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute
  '/inventory-management/products': typeof AuthenticatedInventoryManagementProductsIndexLazyRoute
  '/inventory-management/productsadding': typeof AuthenticatedInventoryManagementProductsaddingIndexLazyRoute
  '/inventory-management/sub-category-list': typeof AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute
  '/inventory-management/units': typeof AuthenticatedInventoryManagementUnitsIndexLazyRoute
  '/promotion-management/coupons': typeof AuthenticatedPromotionManagementCouponsIndexLazyRoute
  '/reports/sales-reports': typeof AuthenticatedReportsSalesReportsIndexLazyRoute
  '/sales-management/sales-list': typeof AuthenticatedSalesManagementSalesListIndexLazyRoute
  '/stock-management/manage-stock': typeof AuthenticatedStockManagementManageStockIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/choose': typeof authChooseRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-1': typeof authSignIn1Route
  '/billings': typeof billingBillingsRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/billing': typeof AuthenticatedBillingIndexRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/inventory-management/suppliers': typeof AuthenticatedInventoryManagementSuppliersIndexRoute
  '/inventory-management/brand-list': typeof AuthenticatedInventoryManagementBrandListIndexLazyRoute
  '/inventory-management/category-list': typeof AuthenticatedInventoryManagementCategoryListIndexLazyRoute
  '/inventory-management/expired-products': typeof AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute
  '/inventory-management/products': typeof AuthenticatedInventoryManagementProductsIndexLazyRoute
  '/inventory-management/productsadding': typeof AuthenticatedInventoryManagementProductsaddingIndexLazyRoute
  '/inventory-management/sub-category-list': typeof AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute
  '/inventory-management/units': typeof AuthenticatedInventoryManagementUnitsIndexLazyRoute
  '/promotion-management/coupons': typeof AuthenticatedPromotionManagementCouponsIndexLazyRoute
  '/reports/sales-reports': typeof AuthenticatedReportsSalesReportsIndexLazyRoute
  '/sales-management/sales-list': typeof AuthenticatedSalesManagementSalesListIndexLazyRoute
  '/stock-management/manage-stock': typeof AuthenticatedStockManagementManageStockIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/choose': typeof authChooseRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-1': typeof authSignIn1Route
  '/(billing)/billings': typeof billingBillingsRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/billing/': typeof AuthenticatedBillingIndexRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
  '/_authenticated/inventory-management/suppliers/': typeof AuthenticatedInventoryManagementSuppliersIndexRoute
  '/_authenticated/inventory-management/brand-list/': typeof AuthenticatedInventoryManagementBrandListIndexLazyRoute
  '/_authenticated/inventory-management/category-list/': typeof AuthenticatedInventoryManagementCategoryListIndexLazyRoute
  '/_authenticated/inventory-management/expired-products/': typeof AuthenticatedInventoryManagementExpiredProductsIndexLazyRoute
  '/_authenticated/inventory-management/products/': typeof AuthenticatedInventoryManagementProductsIndexLazyRoute
  '/_authenticated/inventory-management/productsadding/': typeof AuthenticatedInventoryManagementProductsaddingIndexLazyRoute
  '/_authenticated/inventory-management/sub-category-list/': typeof AuthenticatedInventoryManagementSubCategoryListIndexLazyRoute
  '/_authenticated/inventory-management/units/': typeof AuthenticatedInventoryManagementUnitsIndexLazyRoute
  '/_authenticated/promotion-management/coupons/': typeof AuthenticatedPromotionManagementCouponsIndexLazyRoute
  '/_authenticated/reports/sales-reports/': typeof AuthenticatedReportsSalesReportsIndexLazyRoute
  '/_authenticated/sales-management/sales-list/': typeof AuthenticatedSalesManagementSalesListIndexLazyRoute
  '/_authenticated/stock-management/manage-stock/': typeof AuthenticatedStockManagementManageStockIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/choose'
    | '/otp'
    | '/sign-in'
    | '/sign-in-1'
    | '/billings'
    | '/settings'
    | '/forgot-password'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/billing'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/inventory-management/suppliers'
    | '/inventory-management/brand-list'
    | '/inventory-management/category-list'
    | '/inventory-management/expired-products'
    | '/inventory-management/products'
    | '/inventory-management/productsadding'
    | '/inventory-management/sub-category-list'
    | '/inventory-management/units'
    | '/promotion-management/coupons'
    | '/reports/sales-reports'
    | '/sales-management/sales-list'
    | '/stock-management/manage-stock'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/choose'
    | '/otp'
    | '/sign-in'
    | '/sign-in-1'
    | '/billings'
    | '/forgot-password'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/billing'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/inventory-management/suppliers'
    | '/inventory-management/brand-list'
    | '/inventory-management/category-list'
    | '/inventory-management/expired-products'
    | '/inventory-management/products'
    | '/inventory-management/productsadding'
    | '/inventory-management/sub-category-list'
    | '/inventory-management/units'
    | '/promotion-management/coupons'
    | '/reports/sales-reports'
    | '/sales-management/sales-list'
    | '/stock-management/manage-stock'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/choose'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-1'
    | '/(billing)/billings'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/billing/'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/inventory-management/suppliers/'
    | '/_authenticated/inventory-management/brand-list/'
    | '/_authenticated/inventory-management/category-list/'
    | '/_authenticated/inventory-management/expired-products/'
    | '/_authenticated/inventory-management/products/'
    | '/_authenticated/inventory-management/productsadding/'
    | '/_authenticated/inventory-management/sub-category-list/'
    | '/_authenticated/inventory-management/units/'
    | '/_authenticated/promotion-management/coupons/'
    | '/_authenticated/reports/sales-reports/'
    | '/_authenticated/sales-management/sales-list/'
    | '/_authenticated/stock-management/manage-stock/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authChooseRoute: typeof authChooseRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn1Route: typeof authSignIn1Route
  billingBillingsRoute: typeof billingBillingsRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authChooseRoute: authChooseRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn1Route: authSignIn1Route,
  billingBillingsRoute: billingBillingsRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/choose",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-1",
        "/(billing)/billings",
        "/(auth)/forgot-password",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/billing/",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/users/",
        "/_authenticated/inventory-management/suppliers/",
        "/_authenticated/inventory-management/brand-list/",
        "/_authenticated/inventory-management/category-list/",
        "/_authenticated/inventory-management/expired-products/",
        "/_authenticated/inventory-management/products/",
        "/_authenticated/inventory-management/productsadding/",
        "/_authenticated/inventory-management/sub-category-list/",
        "/_authenticated/inventory-management/units/",
        "/_authenticated/promotion-management/coupons/",
        "/_authenticated/reports/sales-reports/",
        "/_authenticated/sales-management/sales-list/",
        "/_authenticated/stock-management/manage-stock/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/choose": {
      "filePath": "(auth)/choose.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-1": {
      "filePath": "(auth)/sign-in-1.tsx"
    },
    "/(billing)/billings": {
      "filePath": "(billing)/billings.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/billing/": {
      "filePath": "_authenticated/billing/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/suppliers/": {
      "filePath": "_authenticated/inventory-management/suppliers/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/brand-list/": {
      "filePath": "_authenticated/inventory-management/brand-list/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/category-list/": {
      "filePath": "_authenticated/inventory-management/category-list/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/expired-products/": {
      "filePath": "_authenticated/inventory-management/expired-products/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/products/": {
      "filePath": "_authenticated/inventory-management/products/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/productsadding/": {
      "filePath": "_authenticated/inventory-management/productsadding/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/sub-category-list/": {
      "filePath": "_authenticated/inventory-management/sub-category-list/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory-management/units/": {
      "filePath": "_authenticated/inventory-management/units/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/promotion-management/coupons/": {
      "filePath": "_authenticated/promotion-management/coupons/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/sales-reports/": {
      "filePath": "_authenticated/reports/sales-reports/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sales-management/sales-list/": {
      "filePath": "_authenticated/sales-management/sales-list/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/stock-management/manage-stock/": {
      "filePath": "_authenticated/stock-management/manage-stock/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
